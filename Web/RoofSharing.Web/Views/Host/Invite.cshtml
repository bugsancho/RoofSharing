@model RoofSharing.Web.ViewModels.Host.HostInviteViewModel

@{
    ViewBag.Title = "Invite";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal well">
        <h4>
            Ask <strong><i> @Html.DisplayFor(model => model.HostNames) </i></strong>to host you!
        </h4>
        <hr />

        @Html.HiddenFor(model => model.HostNames)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.HostId)

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().DatePickerFor(model => model.StartDate).Min(DateTime.Now).Events(e => e.Change("startDateChanged"))
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().DatePickerFor(model => model.EndDate).Min(DateTime.Now)
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfCompanions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfCompanions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfCompanions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function startDateChanged() {
            var startDateDatepicker = $("#StartDate").data("kendoDatePicker");
            var endDateDateicker = $("#EndDate").data("kendoDatePicker");
            endDateDateicker.min(startDateDatepicker.value());
        }
    </script>
}